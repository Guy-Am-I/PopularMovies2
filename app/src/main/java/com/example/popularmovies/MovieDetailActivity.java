package com.example.popularmovies;

import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.databinding.DataBindingUtil;
import androidx.loader.app.LoaderManager;
import androidx.loader.content.CursorLoader;
import androidx.loader.content.Loader;
import androidx.recyclerview.widget.RecyclerView;

import com.example.popularmovies.Data.MovieDbContract;
import com.example.popularmovies.databinding.MovieDetailBinding;

public class MovieDetailActivity extends AppCompatActivity implements
        LoaderManager.LoaderCallbacks<Cursor>{

    MovieDetailBinding mDetailBinding;
    public static final int MOVIE_DATA_LOADER_ID = 9999;
    private int movie_id;

    public static final String[] MOVIE_DATA_PROJECTION = {
            MovieDbContract.MovieEntry.COLUMN_MOVIE_ID,
            MovieDbContract.MovieEntry.COLUMN_POSTER_PATH,
            MovieDbContract.MovieEntry.COLUMN_BACKDROP_PATH,
            MovieDbContract.MovieEntry.COLUMN_SYNOPSIS,
            MovieDbContract.MovieEntry.COLUMN_USER_RATING,
            MovieDbContract.MovieEntry.COLUMN_RELEASE_DATE,
            //get videos & reviews...?
    };

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        mDetailBinding = DataBindingUtil.setContentView(this, R.layout.movie_detail);


        Intent movie_that_started = getIntent();
        movie_id = movie_that_started.getIntExtra("id", 0);

        LoaderManager.getInstance(this).initLoader(MOVIE_DATA_LOADER_ID, null, this);

    }

    /**
     * Gets called by LoaderManager when new loader is created
     * @param id LoaderId for the loader that is being created
     * @param args any argumenets given to loader before loading
     * @return A newly created loader instance
     */
    @NonNull
    @Override
    public Loader<Cursor> onCreateLoader(int id, @Nullable Bundle args) {

        Uri movieDataUri;

        switch (id) {
            case MOVIE_DATA_LOADER_ID:
                /* Get movie data when activity is launched */
                    if (movie_id != 0) {
                        movieDataUri = MovieDbContract.MovieEntry.buildMovieUriWithId(movie_id);
                    }
                    else {
                        throw new UnsupportedOperationException("INvalud movie ID");
                    }
                break;
            default:
                throw new RuntimeException("Issue creating loader: " + id);
        }
        //get all movies (just poster path & title)
        return new CursorLoader(this,
                movieDataUri,
                MOVIE_DATA_PROJECTION,
                null,
                null,
                null);
    }

    /**
     * Called when the loader has finished loading data
     * @param loader The loader that loaded the data
     * @param data said data generated by said loader
     */
    @Override
    public void onLoadFinished(@NonNull Loader<Cursor> loader, Cursor data) {
        //bind data to the UI
    }

    /**
     * gets called when a created loader is being reset => its data will be unavailable
     * @param loader The loader that is being reset
     */
    @Override
    public void onLoaderReset(@NonNull Loader<Cursor> loader) {

        //notify UI that data is unavailavle, i.e we need to clear the data

    }


}
